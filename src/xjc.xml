<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
		1、自动装配 autowire，可采用名字或者类型自动装配
		2、bean之间可以有继承和依赖关系，依赖关系表示创建bean的时候，被依赖的bean必须存在
		3、bean的作用域scope,默认singleton单例模式，prototype表示每次引用bean都会创建一个新的bean
		4、外部文件注入<context:property-placeholder location="路径"/>配置外部文件路径，${name}注入外部文件对应值
		5、SpringEL表达式，采用#{应用对象或表达式}进行设置
		6、bean的后置处理器，init-method初始化方法， destroy-method销毁方法，类实现BeanPostProccessor接口，配置类bean，后置处理会对所有的bean进行处理（无论有无初始化和销毁方法）
	 -->
	<context:property-placeholder location="classpath:person.properties"/>
	<bean id="myBeanPostProcessor" class="com.spring.beans.MyBeanPostProcessor"></bean>
	<bean id="car1" class="com.spring.beans.Car" p:type="BMW"></bean>
	<bean id="person1" class="com.spring.beans.Person" p:name="${personName}" p:age="${personAge}" init-method="a" destroy-method="b">
		<property name="car" value="#{car1}"></property>
	</bean>
</beans>
